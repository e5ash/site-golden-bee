// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$doc-name: 'doc'
$doc-x: 50px
$doc-y: 0px
$doc-offset-x: -50px
$doc-offset-y: 0px
$doc-width: 28px
$doc-height: 31px
$doc-total-width: 78px
$doc-total-height: 64px
$doc-image: '../../img/sprite.png'
$doc: (50px, 0px, -50px, 0px, 28px, 31px, 78px, 64px, '../../img/sprite.png', 'doc', )
$phone-name: 'phone'
$phone-x: 15px
$phone-y: 50px
$phone-offset-x: -15px
$phone-offset-y: -50px
$phone-width: 14px
$phone-height: 12px
$phone-total-width: 78px
$phone-total-height: 64px
$phone-image: '../../img/sprite.png'
$phone: (15px, 50px, -15px, -50px, 14px, 12px, 78px, 64px, '../../img/sprite.png', 'phone', )
$polygon-name: 'polygon'
$polygon-x: 50px
$polygon-y: 31px
$polygon-offset-x: -50px
$polygon-offset-y: -31px
$polygon-width: 19px
$polygon-height: 18px
$polygon-total-width: 78px
$polygon-total-height: 64px
$polygon-image: '../../img/sprite.png'
$polygon: (50px, 31px, -50px, -31px, 19px, 18px, 78px, 64px, '../../img/sprite.png', 'polygon', )
$time-name: 'time'
$time-x: 0px
$time-y: 50px
$time-offset-x: 0px
$time-offset-y: -50px
$time-width: 15px
$time-height: 14px
$time-total-width: 78px
$time-total-height: 64px
$time-image: '../../img/sprite.png'
$time: (0px, 50px, 0px, -50px, 15px, 14px, 78px, 64px, '../../img/sprite.png', 'time', )
$zoom-name: 'zoom'
$zoom-x: 0px
$zoom-y: 0px
$zoom-offset-x: 0px
$zoom-offset-y: 0px
$zoom-width: 50px
$zoom-height: 50px
$zoom-total-width: 78px
$zoom-total-height: 64px
$zoom-image: '../../img/sprite.png'
$zoom: (0px, 0px, 0px, 0px, 50px, 50px, 78px, 64px, '../../img/sprite.png', 'zoom', )
$spritesheet-width: 78px
$spritesheet-height: 64px
$spritesheet-image: '../../img/sprite.png'
$spritesheet-sprites: ($doc, $phone, $polygon, $time, $zoom, )
$spritesheet: (78px, 64px, '../../img/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)

.icon-
  &doc
    @include sprite($doc)
  &phone
    @include sprite($phone)
  &polygon
    @include sprite($polygon)
  &time
    @include sprite($time)
  &zoom
    @include sprite($zoom)